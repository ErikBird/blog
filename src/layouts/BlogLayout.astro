---
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import '../styles/global.css';
const { pageTitle } = Astro.props;
const { category = 'all' } = Astro.props;

// Coffee stain SVGs
const stainSvgs = [
  '/images/bg/coffee-stain-1.svg',
  '/images/bg/coffee-stain-2.svg',
  '/images/bg/coffee-stain-3.svg',
  '/images/bg/coffee-stain-4.svg',
  '/images/bg/coffee-stain-5.svg',
  '/images/bg/coffee-stain-6.svg',
];

// Ink SVGs
const inkSvgs = [
  '/images/ink/303394.svg',
  '/images/ink/2174689.svg',
  '/images/ink/2174688.svg',
  '/images/ink/2174687.svg',
  '/images/ink/2209585.svg',
  '/images/ink/2174686.svg',
];

function getRandomInt(min: number, max: number) {
  return Math.floor(Math.random() * (max - min + 1)) + min;
}

function getRandomStain() {
  const src = stainSvgs[getRandomInt(0, stainSvgs.length - 1)];
  const top = getRandomInt(5, 70);
  const left = getRandomInt(5, 80);
  const rotate = getRandomInt(0, 360);
  const opacity = Math.random() * 0.3 + 0.15;
  const size = getRandomInt(120, 260);
  return {
    src,
    style: `position:absolute;z-index:0;top:${top}vh;left:${left}vw;transform:rotate(${rotate}deg);opacity:${opacity};width:${size}px;pointer-events:none;user-select:none;`,
    key: `stain-0`,
  };
}

function getRandomInk() {
  const src = inkSvgs[getRandomInt(0, inkSvgs.length - 1)];
  const top = getRandomInt(5, 200);
  const left = getRandomInt(5, 80);
  const rotate = getRandomInt(0, 360);
  const opacity = Math.random() * 0.18 + 0.10;
  const size = getRandomInt(180, 340);
  return {
    src,
    style: `position:absolute;z-index:0;top:${top}vh;left:${left}vw;transform:rotate(${rotate}deg);opacity:${opacity};width:${size}px;pointer-events:none;user-select:none;`,
  };
}
const stain = getRandomStain();
const ink = getRandomInk();
---
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="generator" content={Astro.generator} />
    <title>{pageTitle}</title>
    <script>
        import 'wired-elements';
    </script>
  </head>
  <body>
    <div style="position:absolute;inset:0;pointer-events:none;z-index:0;width:100vw;height:100vh;overflow:hidden;">
      <img src={stain.src} alt="coffee stain" style={stain.style} loading="lazy" />
      <img src={ink.src} alt="ink stain" style={ink.style} loading="lazy" />
    </div>
    <div class="grid-background border-b border-blue-700/80 bg-white" style="position:relative;z-index:1;">
        <Header />
        <h1 class="text-center text-xl font-playwriteGuides py-4 px-4">{pageTitle}</h1>
        <div class="flex flex-wrap justify-center gap-4 pb-4 mt-10 px-4">
            <wired-radio name="filter" checked={category === 'all'} onclick="window.location.href='/'">
                <span class="font-tt">All</span>
            </wired-radio>
            <wired-radio name="filter" checked={category === 'philosophy'} onclick="window.location.href='/categories/philosophy'">
                <span class="font-tt">Philosophy</span>
            </wired-radio>
            <wired-radio name="filter" checked={category === 'technology'} onclick="window.location.href='/categories/technology'">
                <span class="font-tt">Technology</span>
            </wired-radio>
            <wired-radio name="filter" checked={category === 'economics'} onclick="window.location.href='/categories/economics'">
                <span class="font-tt">Economics</span>
            </wired-radio>
        </div>
    </div>
    <div class="max-w-screen-xl mx-auto px-4 sm:px-6" style="position:relative;z-index:1;">
        <div class="grid grid-cols-1 lg:grid-cols-[1fr_300px] gap-8 min-h-[calc(100vh-285px)]">
            <div>
                <slot />
            </div>
            <div class="mt-8 lg:mt-16 mb-8 lg:mb-0">
                <h2 class="text-xl font-tt mb-4">Tags</h2>
                <div class="flex flex-wrap gap-2">
                    {[...new Set(Object.values(import.meta.glob('../pages/posts/*.md', { eager: true }))
                        .filter((post: any) => category === 'all' || post.frontmatter.category === category)
                        .map((post: any) => post.frontmatter.tags)
                        .flat())]
                        .map(tag => (
                            <wired-card elevation="1" class="p-2 bg-white">
                                <a href={`/tags/${tag}`} class="font-tt">{tag}</a>
                            </wired-card>
                        ))}
                </div>
            </div>
        </div>
    </div>
    <div class="grid-background h-16 border-t border-blue-800/35" style="position:relative;z-index:1;">
        <Footer />
    </div>
  </body>
</html>
