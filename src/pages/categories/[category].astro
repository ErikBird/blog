---
import BlogLayout from '../../layouts/BlogLayout.astro';
import PostCard from '../../components/PostCard.astro';
export async function getStaticPaths() {
  const allPosts = Object.values(import.meta.glob('../posts/*.md', { eager: true }));
  
  // Get all unique categories from posts, filter out undefined/null values
  const uniqueCategories = [...new Set(allPosts
    .map((post: any) => post.frontmatter.category)
    .filter((category): category is string => !!category)
    .flat())];
  
  // Return array of category paths with their associated posts
  return uniqueCategories.map((category) => {
    const filteredPosts = allPosts
      .filter((post: any) => post.frontmatter.category === category)
      .sort((a: any, b: any) => new Date(b.frontmatter.pubDate).getTime() - new Date(a.frontmatter.pubDate).getTime());
    return {
      params: { category },
      props: { posts: filteredPosts },
    };
  });
}

const { category } = Astro.params;
const { posts } = Astro.props;
---
<BlogLayout pageTitle={category} category={category}>
	<div class="flex flex-col gap-6 my-16">
		{posts.map((post: any) => (
			<PostCard post={post} />
		))}
	</div>
</BaseLayout>